# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Wheels

on: push
#   release:
#     types: [published]

jobs:
  deploy:
    
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: [ 3.6] # , 3.7, 3.8, 3.9 ]
#        include:
#          - python-version: 3.8
#            vcpkg-ref: e803bf11296d8e7900dafb41e7b1224778d33dc6
#          - python-version: 3.9
#            vcpkg-ref: a0fa6aeb82b3956a2f52ec455061ba1916076d53

    env:
      VCPKG_ROOT: ${{ VCPKG_INSTALLATION_ROOT }}

    steps:
    - name: Print VCPKG_ROOT environment variable
      run: echo $VCPKG_ROOT
      shell: bash

    - uses: actions/checkout@v2
#      with:
#        path: football
#
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Upgrade pip and essential dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build setuptools psutil wheel

#    - name: Checkout vcpkg
#      uses: actions/checkout@v2
#      with:
#        repository: microsoft/vcpkg
#        ref: ${{ matrix.vcpkg-ref }}
#        path: vcpkg-py${{ matrix.python-version }}

    - name: Restore vcpkg_installed cache
      id: cache-vcpkg
      uses: actions/cache@v2
      with:
        path: ${{ github.workspace }}/third_party/gfootball_engine/build_win/vcpkg_installed
        # TODO: hashFiles('...vcpkg.json')
        key: ${{ runner.os }}-vcpkg-py${{ matrix.python-version }}-alpha  # -${{ hashFiles('CMakeLists.txt') }}

#    - name: Show content of workspace after cache has been restored
#      run: find $RUNNER_WORKSPACE
#      shell: bash

    - name: Run pip install
      run: python -m pip install . --use-feature=in-tree-build

#     - name: Build package
#       run: python -m build
#     - name: Publish package
#       uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
#       with:
#         user: __token__
#         password: ${{ secrets.PYPI_API_TOKEN }}
