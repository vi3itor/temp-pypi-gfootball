# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Build and Publish Python Wheels

on:
  release:
    types: [published]

jobs:
  build-windows:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [ 3.6, 3.7, 3.8, 3.9 ]
        architecture: ['x86', 'x64']

    env:
      VCPKG_ROOT: "${{ github.workspace }}/vcpkg"

    steps:
    - name: Check out football repository
      uses: actions/checkout@v2
      with:
        path: football

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
        architecture: ${{ matrix.architecture }}

    - name: Upgrade pip and essential dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -U build setuptools psutil wheel
        pip install -r requirements.txt
      working-directory: football

    - name: Checkout vcpkg
      uses: actions/checkout@v2
      with:
        repository: microsoft/vcpkg
        ref: 025e564979cc01d0fbc5c920aa8a36635efb01bb
        path: vcpkg
        fetch-depth: 0

    - name: Restore vcpkg_installed cache
      uses: actions/cache@v2
#       env: 
#         VCPKG_JSON_PATH: "${{ github.workspace }}/football/third_party/gfootball_engine/vcpkg_manifests/py${{ matrix.python-version }}/vcpkg.json"
#         CMAKE_LISTS_PATH: "${{ github.workspace }}/football/third_party/gfootball_engine/CMakeLists.txt"
      with:
        path: ${{ github.workspace }}/football/third_party/gfootball_engine/build_win/vcpkg_installed
        key: vcpkg-${{ runner.os }}-py${{ matrix.python-version }}-${{ matrix.architecture }}-${{ hashFiles('football/third_party/gfootball_engine/vcpkg_manifests/py3*/vcpkg.json') }}

    - name: Build package
      # TODO: Run python -m build without any arguments to check if the wheel can be built from sdist:
      #  the tool copies source code to the random temp directory, and proceeds with building.
      #  Doing so insures that Manifest.in contains all the required files to build engine from source.
      #  The downside is that we can't cache vcpkg_installed packages, since they'll be located in the random temp directory.
      #  It increases workflow running time from ~17 minutes to ~42 minutes. On the other hand, cache is valid only for 7 days,
      #  and releases are coming not so often anyway. But we definitely should use cache for pushes and PR requests instead.
      run: python -m build --wheel
      working-directory: football
#        |
#        cd football
#        mkdir dist
#        touch dist/py${{ matrix.python-version }}-${{ matrix.architecture }}.whl

    - name: Install the package using the wheel
      run: python -m pip install temp-gfootball --no-index --find-links=dist
      working-directory: football

    - name: Run the tests
      run: FOR %%f IN (gfootball\env\*test.py) DO ( call python %%f & if errorlevel 1 exit /B 1 )
      env:
        UNITTEST_IN_DOCKER: 1
      shell: cmd
      working-directory: football

    - uses: actions/upload-artifact@v2
      with:
        name: windows-wheel-py-${{ matrix.python-version }}-${{ matrix.architecture }}
        path: ${{ github.workspace }}/football/dist/*.whl
        retention-days: 7

  upload-wheels:
    needs: [build-windows]
    runs-on: ubuntu-latest
    steps:
    - name: Check out football repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: python -m pip install --upgrade pip setuptools wheel psutil build

    - name: Build sdist
      run: python -m build --sdist

    - name: Download artifacts
      uses: actions/download-artifact@v2
      with:
        path: ${{ github.workspace }}/artifacts
    
    - name: Move wheels to dist directory
      run:  mv artifacts/**/*.whl dist

#    - uses: actions/upload-artifact@v2
#      with:
#        name: all-artifacts
#        path: ${{ github.workspace }}/dist/

    - name: Publish package
      uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
        # TODO: Remove before sending the PR
        repository_url: https://test.pypi.org/legacy/
