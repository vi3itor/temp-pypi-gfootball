# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Wheels

on: push
#   release:
#     types: [published]

jobs:
  deploy:
    
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: [ 3.6, 3.7, 3.8, 3.9 ]
        architecture: ['x86', 'x64']

    env:
      VCPKG_ROOT: "${{ github.workspace }}/vcpkg"
      VCPKG_JSON: "${{ github.workspace }}/football/third_party/gfootball_engine/vcpkg_manifests/py${{ matrix.python-version }}/vcpkg.json"
      CMAKE_LISTS: "${{ github.workspace }}/football/third_party/gfootball_engine/CMakeLists.txt"

    steps:
    - name: Check out football repository
      uses: actions/checkout@v2
      with:
        path: football

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
        architecture: ${{ matrix.architecture }}

    - name: Upgrade pip and essential dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build setuptools psutil wheel

    - name: Checkout vcpkg
      uses: actions/checkout@v2
      with:
        repository: microsoft/vcpkg
        ref: 1559315ea69718224345930cbf435e9a24311f2c
        path: vcpkg
        fetch-depth: 0

    - name: Restore vcpkg_installed cache
      uses: actions/cache@v2
      with:
        # TODO: Run python -m build without any arguments to check if the wheel can be built from sdist (the tool copies source code to the random temp directory,
        #  and proceeds with building. It insures that Manifest.in contains all the required files to build engine from source) 
        #  It can be done in a separate job before building the wheels
        path: ${{ github.workspace }}/football/third_party/gfootball_engine/build_win/vcpkg_installed
        # TODO: Update version of python 3.9 to the latest available one
        key: vcpkg-${{ runner.os }}-py${{ matrix.python-version }}-${{ matrix.architecture }}-${{ hashFiles(${{ env.VCPKG_JSON }}, ${{ env.CMAKE_LISTS }}) }}

#    - name: Run pip install
#      run: |
#        cd football
#        python -m pip install . --use-feature=in-tree-build

    - name: Build package
      run: |
        cd football
        python -m build --wheel

    - uses: actions/upload-artifact@v2
      with:
        name: windows-wheel-py-${{ matrix.python-version }}-${{ matrix.architecture }}
        path: ${{ github.workspace }}/football/dist

#     - name: Publish package
#       uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
#       with:
#         user: __token__
#         password: ${{ secrets.PYPI_API_TOKEN }}
